// Copyright (c) 2025 Sonic Operations Ltd
//
// Use of this software is governed by the Business Source License included
// in the LICENSE file and at soniclabs.com/bsl11.
//
// Change Date: 2028-4-16
//
// On the date above, in accordance with the Business Source License, use of
// this software will be governed by the GNU Lesser General Public License v3.

// Code generated by MockGen. DO NOT EDIT.
// Source: processor.go
//
// Generated by this command:
//
//	mockgen -source processor.go -destination built_in_contract_mock.go -package floria
//

// Package floria is a generated GoMock package.
package floria

import (
	reflect "reflect"

	tosca "github.com/0xsoniclabs/tosca/go/tosca"
	gomock "go.uber.org/mock/gomock"
)

// MockBuiltInContract is a mock of BuiltInContract interface.
type MockBuiltInContract struct {
	ctrl     *gomock.Controller
	recorder *MockBuiltInContractMockRecorder
	isgomock struct{}
}

// MockBuiltInContractMockRecorder is the mock recorder for MockBuiltInContract.
type MockBuiltInContractMockRecorder struct {
	mock *MockBuiltInContract
}

// NewMockBuiltInContract creates a new mock instance.
func NewMockBuiltInContract(ctrl *gomock.Controller) *MockBuiltInContract {
	mock := &MockBuiltInContract{ctrl: ctrl}
	mock.recorder = &MockBuiltInContractMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBuiltInContract) EXPECT() *MockBuiltInContractMockRecorder {
	return m.recorder
}

// Run mocks base method.
func (m *MockBuiltInContract) Run(state tosca.WorldState, sender, receiver tosca.Address, input []byte, gas tosca.Gas) tosca.CallResult {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Run", state, sender, receiver, input, gas)
	ret0, _ := ret[0].(tosca.CallResult)
	return ret0
}

// Run indicates an expected call of Run.
func (mr *MockBuiltInContractMockRecorder) Run(state, sender, receiver, input, gas any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockBuiltInContract)(nil).Run), state, sender, receiver, input, gas)
}
